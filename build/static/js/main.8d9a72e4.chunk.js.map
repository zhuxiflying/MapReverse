{"version":3,"sources":["component/backIcon.jsx","component/mapIcon.jsx","component/originIcon.jsx","component/mapIconContainer.jsx","component/axisTick.jsx","utils/dataUtils.jsx","component/timeBarChart.jsx","component/slider/handle.jsx","component/slider/track.jsx","component/sliderBar.jsx","component/scoreHistogram.jsx","component/scoreFilter.jsx","component/entity.jsx","component/entityContainer.jsx","component/domainTable.jsx","component/analysisTab.jsx","component/image.jsx","component/imageInfo.jsx","component/imagePanel.jsx","component/mapReverse.jsx","component/logo.jsx","component/galleryInfo.jsx","component/mapImage.jsx","component/mapList.jsx","component/mapGallery.jsx","App.jsx","index.js"],"names":["BackIcon","onClickBack","className","onClick","src","alt","MapIcon","data","selectedImage","colorScale","selectedEntity","selectedDomain","onClickIcon","entity","Domain","entityKeys","Object","keys","style","Id","includes","Image_url","OriginIcon","onClickOrigin","mapId","mapIconContainer","map","match","key","CustomizedAxisTick","this","props","x","y","payload","transform","dy","textAnchor","value","PureComponent","aggregateByMonth","input","monthCount","sort","element1","element2","Date","Crawl_Date","sortByDate","forEach","element","Score","getKeyfromDate","entries","date","frequency","score","dateStr","month","getMonth","getFullYear","toDateString","getDate","TimeBarChart","selectedBar","onClickBar","aggregation","height","width","margin","top","right","bottom","left","dataKey","axisLine","tick","stroke","fontSize","stackId","maxBarSize","entry","index","cursor","fill","strokeWidth","Handle","handle","id","percent","getHandleProps","position","marginLeft","marginTop","zIndex","border","textAlign","borderRadius","backgroundColor","Track","source","target","getTrackProps","SliderBar","scoresRange","handleChange","values","onChange","domain","step","mode","getRailProps","handles","tracks","ScoreHistogram","histogram","foo","i","push","Math","ceil","label","scoreHistogram","barCategoryGap","ScoreFilter","Entity","scale","onClickEntity","selected","focused","styleClass","EntityContainer","entities","entityList","a","b","aggregateByEntity","focusedEntities","length","range","item","thresholds","ckmeans","max","slice","scaleThreshold","initNaturalBreak","DomainTable","state","sortColumn","onSort","column","setState","sortByColumn","sortByFrequency","domain1","domain2","onCheckDomain","domains","domainCount","aggregateByDomain","sorted","aria-hidden","type","checked","Component","AnalysisTab","Image","url","ImageInfo","Link","Fragment","href","rel","color","fontWeight","ImagePanel","imageUrl","OriginImage","undefined","MapReverse","handleIconClick","icon","handleOriginClick","handleBarClick","bar","handleEntityClick","handleDomainOnCheck","handleSilderChange","filterDataByDate","maps","barDate","filter","filterDataByEntity","filterDataByScore","axios","get","filtered","filtered2","quantileScale","scaleQuantile","initQuantileScale","Logo","GalleryInfo","MapImage","onClickMap","MapList","MapGallery","App","handleBackClick","handleMapClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d9a72e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/mapIcon.css\";\r\n\r\nconst BackIcon = ({ onClickBack }) => {\r\n  return (\r\n    <div className=\"back-icon\" onClick={() => onClickBack()}>\r\n      <img className=\"icon-img\" src={\"data\\\\backIcon.png\"} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackIcon;\r\n","import React from \"react\";\r\nimport \"../css/mapIcon.css\";\r\n\r\nconst MapIcon = ({\r\n  data,\r\n  colorScale,\r\n  selectedImage,\r\n  selectedEntity,\r\n  selectedDomain,\r\n  onClickIcon,\r\n}) => {\r\n  const { entity, Domain } = data;\r\n  const entityKeys = entity === null ? [] : Object.keys(entity);\r\n\r\n  const focused = selectedImage !== null && selectedImage.Id === data.Id;\r\n  const selected =\r\n    entityKeys.includes(selectedEntity) || Domain === selectedDomain;\r\n  let style = focused ? \"icon-div-focus\" : \"icon-div\";\r\n  if (selected) style += \" icon-div-selected\";\r\n\r\n  return (\r\n    <div className={style} onClick={() => onClickIcon(data)}>\r\n      <img\r\n        className=\"icon-img\"\r\n        src={\"data\\\\\" + data.Image_url + \".jpg\"}\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapIcon;\r\n","import React from \"react\";\r\nimport \"../css/mapIcon.css\";\r\n\r\nconst OriginIcon = ({ onClickOrigin, mapId }) => {\r\n  return (\r\n    <div className=\"origin-icon\" onClick={() => onClickOrigin()}>\r\n      <img className=\"icon-img\" src={\"data\\\\\" + mapId + \"\\\\icon.png\"} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OriginIcon;\r\n","import React from \"react\";\r\nimport BackIcon from \"./backIcon\";\r\nimport MapIcon from \"./mapIcon\";\r\nimport \"../css/mapContainer.css\";\r\nimport OriginIcon from \"./originIcon\";\r\n\r\nconst mapIconContainer = ({\r\n  data,\r\n  mapId,\r\n  colorScale,\r\n  selectedImage,\r\n  selectedEntity,\r\n  selectedDomain,\r\n  onClickIcon,\r\n  onClickBack,\r\n  onClickOrigin\r\n}) => {\r\n  return (\r\n    <div className=\"icon-container\">\r\n      <BackIcon onClickBack={onClickBack} />\r\n      <OriginIcon onClickOrigin={onClickOrigin} mapId={mapId} />\r\n      {data.map(match => {\r\n        return (\r\n          <MapIcon\r\n            key={match.Id}\r\n            data={match}\r\n            colorScale={colorScale}\r\n            selectedImage={selectedImage}\r\n            selectedEntity={selectedEntity}\r\n            selectedDomain={selectedDomain}\r\n            onClickIcon={onClickIcon}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default mapIconContainer;\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/timeBarChart.css\";\r\n\r\nclass CustomizedAxisTick extends PureComponent {\r\n  render() {\r\n    const { x, y, payload } = this.props;\r\n\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text\r\n          x={0}\r\n          y={0}\r\n          dy={16}\r\n          className=\"small\"\r\n          textAnchor=\"middle\"\r\n          //   transform=\"rotate(-35)\"\r\n        >\r\n          {payload.value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizedAxisTick;\r\n","import { scaleQuantile, scaleThreshold } from \"d3-scale\";\r\nimport { ckmeans } from \"simple-statistics\";\r\n\r\n//count the frequency of entities\r\nexport function aggregateByEntity(data) {\r\n  let entities = {};\r\n  let entityList = [];\r\n\r\n  //summarize the frequency by entity names\r\n  data.forEach(element => {\r\n    const { entity } = element;\r\n    if (entity !== null) {\r\n      Object.entries(entity).forEach(([key, value]) => {\r\n        if (key !== \"\") {\r\n          if (!entities[key]) {\r\n            entities[key] = 1;\r\n          }\r\n          entities[key]++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  //transform a entity object to an array\r\n  entityList = Object.entries(entities).map(([key, value]) => ({\r\n    key: key,\r\n    frequency: value\r\n  }));\r\n\r\n  //sort the entity with frequency\r\n  entityList.sort((a, b) => b.frequency - a.frequency);\r\n  return entityList;\r\n}\r\n\r\n//count the frequency of the domains\r\nexport function aggregateByDomain(data) {\r\n  let domainCount = {};\r\n  let domains = [];\r\n\r\n  data.forEach(element => {\r\n    const { Domain, Crawl_Date } = element;\r\n    const date = new Date(Crawl_Date);\r\n    if (!domainCount[Domain]) {\r\n      domainCount[Domain] = [];\r\n      domainCount[Domain][0] = date;\r\n      domainCount[Domain][1] = 1;\r\n    } else {\r\n      if (date < domainCount[Domain][0]) {\r\n        domainCount[Domain][0] = date;\r\n      }\r\n      domainCount[Domain][1]++;\r\n    }\r\n  });\r\n\r\n  domains = Object.entries(domainCount).map(([key, value]) => ({\r\n    key,\r\n    frequency: value[1],\r\n    date: toDateString(value[0])\r\n  }));\r\n\r\n  return domains;\r\n}\r\n\r\n// aggregte data by crawl date with monthly intervals and sorted order\r\nexport function aggregateByMonth(input) {\r\n  let monthCount = {};\r\n  let aggregation = [];\r\n  let data = [...input];\r\n  sortByDate(data);\r\n  data.forEach(element => {\r\n    const { Crawl_Date, Score } = element;\r\n    const key = getKeyfromDate(Crawl_Date);\r\n    //use object as hash map, the value cantains frequency and total scores;\r\n    if (!monthCount[key]) {\r\n      monthCount[key] = [];\r\n      monthCount[key][0] = 1;\r\n      monthCount[key][1] = Score;\r\n    } else {\r\n      monthCount[key][0]++;\r\n      monthCount[key][1] += Score;\r\n    }\r\n  });\r\n\r\n  aggregation = Object.entries(monthCount).map(([key, value]) => ({\r\n    date: key,\r\n    frequency: value[0],\r\n    score: value[1] / value[0]\r\n  }));\r\n\r\n  return aggregation;\r\n}\r\n\r\n//aggregate scores into histogram\r\nexport function scoreHistogram(data) {\r\n  const interval = 2;\r\n  const barNum = 50;\r\n\r\n  let foo = [];\r\n  for (var i = 1; i <= barNum; i++) {\r\n    foo.push(i);\r\n  }\r\n\r\n  let histogram = {};\r\n  let histogramChart = [];\r\n  data.forEach(element => {\r\n    const { Score } = element;\r\n    const key = Math.ceil(Score / interval);\r\n    if (!histogram[key]) {\r\n      histogram[key] = 1;\r\n    } else {\r\n      histogram[key]++;\r\n    }\r\n  });\r\n\r\n  histogramChart = foo.map(element => ({\r\n    label: element * interval,\r\n    frequency: histogram[element] || 0\r\n  }));\r\n\r\n  return histogramChart;\r\n}\r\n\r\nexport function sortByFrequency(data) {\r\n  return data.sort((domain1, domain2) => {\r\n    return domain2.frequency - domain1.frequency;\r\n  });\r\n}\r\n\r\nexport function sortByDate(data) {\r\n  return data.sort((element1, element2) => {\r\n    const date1 = new Date(element1.Crawl_Date),\r\n      date2 = new Date(element2.Crawl_Date);\r\n    return date1 - date2;\r\n  });\r\n}\r\n\r\n//format tick label, only return month for date that is not in Jananary\r\nexport function tickFormatter(tick) {\r\n  const date = new Date(tick);\r\n  const month = date.getMonth() + 1;\r\n  if (month === 1) return tick;\r\n  return month;\r\n}\r\n\r\n//extract the year and month fields as the key for a date\r\nexport function getKeyfromDate(dateStr) {\r\n  const date = new Date(dateStr),\r\n    month = date.getMonth() + 1;\r\n  return date.getFullYear() + \"-\" + month;\r\n}\r\n\r\n//extract the year and month fields as the key for a date\r\nexport function toDateString(date) {\r\n  const year = date.getFullYear(),\r\n    month = date.getMonth() + 1,\r\n    day = date.getDate() + 1;\r\n  return year + \"-\" + month + \"-\" + day;\r\n}\r\n\r\n//initial color scale\r\nexport function initQuantileScale(data) {\r\n  const domain = data.map(item => item.Score).sort((a, b) => a - b);\r\n  const range = [\"#feebe2\", \"#fbb4b9\", \"#f768a1\", \"#ae017e\"];\r\n  const quantileScale = scaleQuantile()\r\n    .domain(domain)\r\n    .range(range);\r\n  return quantileScale;\r\n}\r\n\r\n//initial color scale\r\nexport function initNaturalBreak(data) {\r\n  if (data.length === 0) return null;\r\n  const range = [\"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\"];\r\n  // const range = [\"#6baed6\", \"#4292c6\", \"#2171b5\", \"#084594\"];\r\n\r\n  const domain = data.map(item => item.frequency);\r\n  //implment jenks natural breaks by ckmeans, #clusters = #thresholds +1;\r\n  const domainClass = ckmeans(domain, range.length);\r\n  const thresholds = domainClass\r\n    .map(element => {\r\n      return Math.max(...element);\r\n    })\r\n    .slice(0, -1);\r\n\r\n  const scale = scaleThreshold()\r\n    .domain(thresholds)\r\n    .range(range);\r\n  return scale;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Cell,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport CustomizedAxisTick from \"./axisTick\";\r\nimport { aggregateByMonth } from \"../utils/dataUtils\";\r\nimport \"../css/timeBarChart.css\";\r\n\r\nconst TimeBarChart = props => {\r\n  const { data, selectedBar, onClickBar, colorScale } = props;\r\n  const maxBarWidth = 100;\r\n  const aggregation = aggregateByMonth(data);\r\n  return (\r\n    <div className=\"timeChart-container\">\r\n      <ResponsiveContainer height=\"100%\" width=\"100%\">\r\n        <BarChart\r\n          data={aggregation}\r\n          margin={{ top: 10, right: 10, bottom: 10, left: 0 }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            axisLine={false}\r\n            tick={<CustomizedAxisTick />}\r\n            stroke=\"black\"\r\n          />\r\n          <YAxis stroke=\"black\" tick={{ fontSize: \"1rem\" }} />\r\n          <Bar\r\n            dataKey=\"frequency\"\r\n            stackId=\"a\"\r\n            maxBarSize={maxBarWidth}\r\n            onClick={onClickBar}\r\n          >\r\n            {aggregation.map((entry, index) => (\r\n              <Cell\r\n                cursor=\"pointer\"\r\n                fill={colorScale(entry.score)}\r\n                stroke={entry.date === selectedBar ? \"#8884d8\" : null}\r\n                strokeWidth=\"4\"\r\n                key={`cell-${index}`}\r\n              />\r\n            ))}\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeBarChart;\r\n","import React from \"react\";\r\n\r\nexport function Handle({ handle: { id, value, percent }, getHandleProps }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        left: `${percent}%`,\r\n        position: \"absolute\",\r\n        marginLeft: -10,\r\n        marginTop: -5,\r\n        zIndex: 2,\r\n        width: 20,\r\n        height: 20,\r\n        border: 0,\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\",\r\n        borderRadius: \"50%\",\r\n        backgroundColor: \"#636363\"\r\n      }}\r\n      {...getHandleProps(id)}\r\n    >\r\n      {/* <div style={{ fontFamily: \"Roboto\", fontSize: 11, marginTop: -35 }}>\r\n        {value}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Track({ source, target, getTrackProps }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        height: 10,\r\n        zIndex: 1,\r\n        backgroundColor: \"#8884d8\",\r\n        borderRadius: 5,\r\n        cursor: \"pointer\",\r\n        left: `${source.percent}%`,\r\n        width: `${target.percent - source.percent}%`\r\n      }}\r\n      {\r\n        ...getTrackProps() /* this will set up events if you want it to be clickeable (optional) */\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Slider, Rail, Handles, Tracks } from \"react-compound-slider\";\r\nimport { Handle } from \"./slider/handle\";\r\nimport { Track } from \"./slider/track\";\r\nimport \"../css/sliderBar.css\";\r\n\r\nconst SliderBar = props => {\r\n  const { scoresRange, handleChange } = props;\r\n\r\n  return (\r\n    <Slider\r\n      className=\"silder\"\r\n      values={scoresRange}\r\n      onChange={handleChange}\r\n      domain={[0, 100]}\r\n      step={1}\r\n      mode={2}\r\n    >\r\n      <Rail>\r\n        {({ getRailProps }) => <div className=\"rail\" {...getRailProps()} />}\r\n      </Rail>\r\n      <Handles>\r\n        {({ handles, getHandleProps }) => (\r\n          <div className=\"slider-handles\">\r\n            {handles.map(handle => (\r\n              <Handle\r\n                key={handle.id}\r\n                handle={handle}\r\n                getHandleProps={getHandleProps}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </Handles>\r\n      <Tracks left={false} right={false}>\r\n        {({ tracks, getTrackProps }) => (\r\n          <div className=\"slider-tracks\">\r\n            {tracks.map(({ id, source, target }) => (\r\n              <Track\r\n                key={id}\r\n                source={source}\r\n                target={target}\r\n                getTrackProps={getTrackProps}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </Tracks>\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default SliderBar;\r\n","import React from \"react\";\r\nimport { BarChart, Bar, Cell, ResponsiveContainer } from \"recharts\";\r\nimport { scoreHistogram } from \"../utils/dataUtils\";\r\n\r\nconst ScoreHistogram = props => {\r\n  const { data, colorScale } = props;\r\n  const histogram = scoreHistogram(data);\r\n  return (\r\n    <ResponsiveContainer height=\"80%\" width=\"100%\">\r\n      <BarChart\r\n        data={histogram}\r\n        barCategoryGap={1}\r\n        margin={{ top: 10, right: 0, bottom: 0, left: 0 }}\r\n      >\r\n        <Bar dataKey=\"frequency\">\r\n          {histogram.map((entry, index) => (\r\n            <Cell fill={colorScale(entry.label)} key={`cell-${index}`} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ScoreHistogram;\r\n","import React from \"react\";\r\nimport SliderBar from \"./sliderBar\";\r\nimport ScoreHistogram from \"./scoreHistogram\";\r\nimport \"../css/scoreFilter.css\";\r\n\r\nconst ScoreFilter = props => {\r\n  const { data, colorScale, scoresRange, handleChange } = props;\r\n\r\n  return (\r\n    <div className=\"scoreFilter-container\">\r\n      <ScoreHistogram data={data} colorScale={colorScale}></ScoreHistogram>\r\n      <SliderBar scoresRange={scoresRange} handleChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreFilter;\r\n","import React from \"react\";\r\nimport \"../css/entity.css\";\r\n\r\nconst Entity = ({ entity, scale, onClickEntity, selected, focused }) => {\r\n  const { key, frequency } = entity;\r\n\r\n  let styleClass = \"entity-div\";\r\n  if (selected) {\r\n    styleClass += \" entity-div-selected\";\r\n  } else if (focused) {\r\n    styleClass += \" entity-div-focused\";\r\n  }\r\n\r\n  const style = {\r\n    backgroundColor: scale(frequency)\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={styleClass}\r\n      style={style}\r\n      onClick={() => onClickEntity(key)}\r\n    >\r\n      {key}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Entity;\r\n","import React from \"react\";\r\nimport { aggregateByEntity, initNaturalBreak } from \"../utils/dataUtils\";\r\nimport Entity from \"./entity\";\r\nimport \"../css/entityContainer.css\";\r\n\r\nconst EntityContainer = ({\r\n  data,\r\n  onClickEntity,\r\n  selectedImage,\r\n  selectedEntity\r\n}) => {\r\n  const entities = aggregateByEntity(data);\r\n  const focusedEntities =\r\n    selectedImage === null || selectedImage.entity === null\r\n      ? []\r\n      : Object.keys(selectedImage.entity);\r\n  const scale = initNaturalBreak(entities);\r\n\r\n  return (\r\n    <div className=\"entity-container\">\r\n      {entities.map(entity => (\r\n        <Entity\r\n          key={entity.key}\r\n          entity={entity}\r\n          scale={scale}\r\n          onClickEntity={onClickEntity}\r\n          selected={selectedEntity === entity.key}\r\n          focused={focusedEntities.includes(entity.key)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EntityContainer;\r\n","import React, { Component } from \"react\";\r\nimport { aggregateByDomain } from \"../utils/dataUtils\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"../css/analysisTab.css\";\r\n\r\nclass DomainTable extends Component {\r\n  state = { sortColumn: \"date\" };\r\n\r\n  onSort = column => {\r\n    this.setState({ sortColumn: column });\r\n  };\r\n\r\n  sortByColumn = data => {\r\n    if (this.state.sortColumn === \"frequency\")\r\n      return this.sortByFrequency(data);\r\n    if (this.state.sortColumn === \"date\") return this.sortByDate(data);\r\n  };\r\n\r\n  sortByFrequency = data => {\r\n    return data.sort((domain1, domain2) => {\r\n      return domain2.frequency - domain1.frequency;\r\n    });\r\n  };\r\n\r\n  sortByDate = data => {\r\n    return data.sort((domain1, domain2) => {\r\n      const date1 = new Date(domain1.date),\r\n        date2 = new Date(domain2.date);\r\n      return date1 - date2;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data, onCheckDomain, selectedDomain } = this.props;\r\n    const { sortColumn } = this.state;\r\n\r\n    const domains = aggregateByDomain(data);\r\n    const sorted = this.sortByColumn(domains);\r\n\r\n    return (\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>Domain</th>\r\n            <th onClick={() => this.onSort(\"frequency\")} className=\"tableHead\">\r\n              Frequency{\" \"}\r\n              {sortColumn === \"frequency\" && (\r\n                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>\r\n              )}\r\n            </th>\r\n            <th onClick={() => this.onSort(\"date\")} className=\"tableHead\">\r\n              First found on{\" \"}\r\n              {sortColumn === \"date\" && (\r\n                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>\r\n              )}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sorted.map(domain => (\r\n            <tr key={domain.key}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={() => onCheckDomain(domain.key)}\r\n                  checked={domain.key === selectedDomain}\r\n                />\r\n              </td>\r\n              <td>{domain.key}</td>\r\n              <td>{domain.frequency}</td>\r\n              <td>{domain.date}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DomainTable;\r\n","import React from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport EntityContainer from \"./entityContainer\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport \"../css/analysisTab.css\";\r\nimport DomainTable from \"./domainTable\";\r\n\r\nconst AnalysisTab = ({\r\n  data,\r\n  onClickEntity,\r\n  onCheckDomain,\r\n  selectedImage,\r\n  selectedEntity,\r\n  selectedDomain\r\n}) => {\r\n  return (\r\n    <Tabs className=\"analysisTab-container\">\r\n      <TabList>\r\n        <Tab>Entities</Tab>\r\n        <Tab>Domains</Tab>\r\n      </TabList>\r\n      <TabPanel>\r\n        <EntityContainer\r\n          key=\"entityContainer\"\r\n          data={data}\r\n          selectedImage={selectedImage}\r\n          selectedEntity={selectedEntity}\r\n          onClickEntity={onClickEntity}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <DomainTable\r\n          key=\"domainContainer\"\r\n          data={data}\r\n          selectedDomain={selectedDomain}\r\n          onCheckDomain={onCheckDomain}\r\n        />\r\n      </TabPanel>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default AnalysisTab;\r\n","import React from \"react\";\r\n\r\nconst Image = ({ url }) => {\r\n  return <img className=\"origin-img\" src={url} alt=\"\" />;\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\n\r\nconst ImageInfo = ({ selectedImage, colorScale }) => {\r\n  const { Score, Crawl_Date, Link, Domain } = selectedImage;\r\n  return (\r\n    <React.Fragment>\r\n      <p>\r\n        The original image was first found on <b>{Crawl_Date}</b> at{\" \"}\r\n        <a href={Link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {Domain}\r\n        </a>{\" \"}\r\n        .\r\n      </p>\r\n      <p>\r\n        The similarity score is{\" \"}\r\n        <span style={{ color: colorScale(Score), fontWeight: \"bold\" }}>\r\n          {Score}\r\n        </span>\r\n        .\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageInfo;\r\n","import React from \"react\";\r\nimport Image from \"./image\";\r\nimport ImageInfo from \"./imageInfo\";\r\nimport \"../css/infoContainer.css\";\r\n\r\nconst ImagePanel = ({ selectedImage, colorScale, mapId }) => {\r\n  let url = null;\r\n  if (selectedImage === null) {\r\n    url = \"data\\\\\" + mapId + \"\\\\\" + mapId + \".jpg\";\r\n  } else {\r\n    const { OriginImage: imageUrl } = selectedImage;\r\n    url = imageUrl === undefined ? \"data\\\\noImage.jpg\" : \"data\\\\\" + imageUrl;\r\n  }\r\n\r\n  return (\r\n    <div className=\"info-container\">\r\n      <div className=\"originImage\">\r\n        <Image url={url} />\r\n      </div>\r\n      <div className=\"textPanel\">\r\n        {selectedImage === null ? (\r\n          <p>This is the input image.</p>\r\n        ) : (\r\n          <ImageInfo selectedImage={selectedImage} colorScale={colorScale} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagePanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport MapIconContainer from \"./mapIconContainer\";\r\nimport TimeBarChart from \"./timeBarChart\";\r\nimport { initQuantileScale, getKeyfromDate } from \"../utils/dataUtils\";\r\nimport \"../css/app.css\";\r\nimport ScoreFilter from \"./scoreFilter\";\r\nimport AnalysisTab from \"./analysisTab\";\r\nimport ImagePanel from \"./imagePanel\";\r\n\r\nclass MapReverse extends Component {\r\n  state = {\r\n    mapId: this.props.mapId,\r\n    data: [],\r\n    selectedImage: null,\r\n    selectedBar: \"\",\r\n    selectedEntity: null,\r\n    selectedDomain: null,\r\n    scoresRange: [0, 100]\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await axios.get(\r\n      \"data/\" + this.state.mapId + \"/matches.json\"\r\n    );\r\n    this.setState({ data: data, filtered: data });\r\n  }\r\n\r\n  handleIconClick = icon => {\r\n    const selectedImage = this.state.selectedImage === icon ? null : icon;\r\n    this.setState({ selectedImage });\r\n  };\r\n\r\n  handleOriginClick = () => {\r\n    this.setState({ selectedImage: null });\r\n  };\r\n\r\n  handleBarClick = bar => {\r\n    const selectedBar = this.state.selectedBar === bar.date ? \"\" : bar.date;\r\n    this.setState({ selectedBar });\r\n  };\r\n\r\n  handleEntityClick = entity => {\r\n    const selectedEntity = entity === this.state.selectedEntity ? null : entity;\r\n    this.setState({ selectedEntity });\r\n  };\r\n\r\n  handleDomainOnCheck = domain => {\r\n    const selectedDomain = domain === this.state.selectedDomain ? null : domain;\r\n    this.setState({ selectedDomain });\r\n  };\r\n\r\n  handleSilderChange = scoresRange => {\r\n    this.setState({ scoresRange });\r\n  };\r\n\r\n  filterDataByDate = (maps, barDate) => {\r\n    const filtered = maps.filter(element => {\r\n      const { Crawl_Date } = element;\r\n      const key = getKeyfromDate(Crawl_Date);\r\n      return key === barDate;\r\n    });\r\n    return filtered;\r\n  };\r\n\r\n  filterDataByEntity = (maps, entity) => {\r\n    const filtered = maps.filter(element => {\r\n      const entities = element.entity;\r\n      const entityKeys = entities === null ? [] : Object.keys(entities);\r\n      return entityKeys.includes(entity);\r\n    });\r\n    return filtered;\r\n  };\r\n\r\n  filterDataByScore = (maps, scoresRange) => {\r\n    const filtered = maps.filter(element => {\r\n      const score = element.Score;\r\n      return score >= scoresRange[0] && score <= scoresRange[1];\r\n    });\r\n    return filtered;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      mapId,\r\n      scoresRange,\r\n      selectedImage,\r\n      selectedBar,\r\n      selectedEntity,\r\n      selectedDomain\r\n    } = this.state;\r\n\r\n    const { onClickBack } = this.props;\r\n\r\n    //filter data by date;\r\n    const filtered =\r\n      selectedBar === \"\" ? data : this.filterDataByDate(data, selectedBar);\r\n\r\n    //filter data by score range;\r\n    const filtered2 = this.filterDataByScore(filtered, scoresRange);\r\n\r\n    const quantileScale = initQuantileScale(data);\r\n\r\n    return (\r\n      <div className=\"grid-container\">\r\n        <div className=\"mapContainer\">\r\n          <MapIconContainer\r\n            key=\"iconContainer\"\r\n            data={filtered2}\r\n            mapId={mapId}\r\n            colorScale={quantileScale}\r\n            selectedImage={selectedImage}\r\n            selectedEntity={selectedEntity}\r\n            selectedDomain={selectedDomain}\r\n            onClickIcon={this.handleIconClick}\r\n            onClickOrigin={this.handleOriginClick}\r\n            onClickBack={onClickBack}\r\n          />\r\n        </div>\r\n        <div className=\"imageContainer\">\r\n          <ImagePanel\r\n            selectedImage={selectedImage}\r\n            colorScale={quantileScale}\r\n            mapId={mapId}\r\n          />\r\n        </div>\r\n        <div className=\"scoreFilter\">\r\n          <ScoreFilter\r\n            key=\"scoreFilter\"\r\n            data={data}\r\n            scoresRange={scoresRange}\r\n            colorScale={quantileScale}\r\n            handleChange={this.handleSilderChange}\r\n          />\r\n        </div>\r\n        <div className=\"timeChart\">\r\n          <TimeBarChart\r\n            key=\"timeBarChart\"\r\n            data={data}\r\n            selectedBar={selectedBar}\r\n            colorScale={quantileScale}\r\n            onClickBar={this.handleBarClick}\r\n          />\r\n        </div>\r\n        <div className=\"analysisTab\">\r\n          <AnalysisTab\r\n            key=\"analysisTab\"\r\n            data={filtered2}\r\n            selectedImage={selectedImage}\r\n            selectedEntity={selectedEntity}\r\n            onClickEntity={this.handleEntityClick}\r\n            onCheckDomain={this.handleDomainOnCheck}\r\n            selectedDomain={selectedDomain}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapReverse;\r\n","import React from \"react\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div>\r\n      <img className=\"logo-img\" src=\"data\\\\Logo.jpg\" alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\n\r\nconst GalleryInfo = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <p>\r\n        <b>MapReverse</b> is a project prototype built by{\" \"}\r\n        <a\r\n          href=\"https://github.com/zhuxiflying/MapReverse\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Xi Zhu\r\n        </a>{\" \"}\r\n        and{\" \"}\r\n        <a\r\n          href=\"https://sites.psu.edu/arobinson/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Anthony Robinson\r\n        </a>{\" \"}\r\n        at{\" \"}\r\n        <a\r\n          href=\"https://www.geovista.psu.edu/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          the GeoVISTA Center\r\n        </a>{\" \"}\r\n        in the Department of Geography at Penn State University. MapReverse is\r\n        designed to help explore maps shared in social media to uncover their\r\n        potential sources and derivatives. MapReverse combines machine learning\r\n        services for reverse image search with visualizations to make it\r\n        possible for users to better understand the characteristics and\r\n        dissemination of maps in social media. Please refer to{\" \"}\r\n        <a\r\n          href=\"https://www.researchgate.net/publication/325181270_Elements_of_Viral_Cartography\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          our recent article\r\n        </a>{\" \"}\r\n        for more information, or you can contact <i>arobinsonATpsu.edu</i>\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GalleryInfo;\r\n","import React from \"react\";\r\n\r\nconst MapImage = ({ mapId, onClickMap }) => {\r\n  return (\r\n    <div className=\"map-image-container\" onClick={() => onClickMap(mapId)}>\r\n      <img\r\n        className=\"map-image\"\r\n        src={\"data\\\\\" + mapId + \"\\\\\" + mapId + \".jpg\"}\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapImage;\r\n","import React from \"react\";\r\nimport MapImage from \"./mapImage\";\r\n\r\nconst MapList = ({ onClickMap }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <MapImage mapId=\"test15\" onClickMap={onClickMap} />\r\n      <MapImage mapId=\"test20\" onClickMap={onClickMap} />\r\n      <MapImage mapId=\"test9\" onClickMap={onClickMap} />\r\n      <MapImage mapId=\"test2\" onClickMap={onClickMap} />\r\n      <MapImage mapId=\"test3\" onClickMap={onClickMap} />\r\n      <MapImage mapId=\"test4\" onClickMap={onClickMap} />\r\n      <MapImage mapId=\"test5\" onClickMap={onClickMap} />\r\n      <MapImage mapId=\"test8\" onClickMap={onClickMap} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MapList;\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"./logo\";\r\nimport GalleryInfo from \"./galleryInfo\";\r\nimport MapList from \"./mapList\";\r\nimport \"../css/mapGallery.css\";\r\n\r\nclass MapGallery extends Component {\r\n  state = {};\r\n  render() {\r\n    const { onClickMap } = this.props;\r\n    return (\r\n      <div className=\"gallary-container\">\r\n        <div className=\"log-container\">\r\n          <Logo />\r\n        </div>\r\n        <div className=\"map-container\">\r\n          <MapList onClickMap={onClickMap} />\r\n        </div>\r\n        <div className=\"text-container\">\r\n          <GalleryInfo />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapGallery;\r\n","import React, { Component } from \"react\";\r\nimport MapReverse from \"./component/mapReverse\";\r\nimport MapGallery from \"./component/mapGallery\";\r\n\r\nclass App extends Component {\r\n  state = { mapId: null };\r\n\r\n  handleBackClick = () => {\r\n    this.setState({ mapId: null });\r\n  };\r\n\r\n  handleMapClick = (mapId) => {\r\n    this.setState({ mapId: mapId });\r\n  };\r\n\r\n  render() {\r\n    return this.state.mapId === null ? (\r\n      <MapGallery onClickMap={this.handleMapClick} />\r\n    ) : (\r\n      <MapReverse mapId={this.state.mapId} onClickBack={this.handleBackClick} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}